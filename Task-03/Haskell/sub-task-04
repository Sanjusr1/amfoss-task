import System.IO

generateDiamond :: Int -> String
generateDiamond n =
    let upperPart = [ replicate (n - i - 1) ' ' ++ replicate (2 * i + 1) '*' | i <- [0..(n-1)] ]
        lowerPart = [ replicate (n - i - 1) ' ' ++ replicate (2 * i + 1) '*' | i <- reverse [0..(n-2)] ]
    in unlines (upperPart ++ lowerPart)

main :: IO ()
main = do
    content <- readFile "input.txt"
    let n = read (init content) :: Int
    let diamondPattern = generateDiamond n
    writeFile "output.txt" diamondPattern
